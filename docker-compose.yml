version: '3.7'
services:
  mongodb:
    container_name: mongoDB
    image: mongo:latest
    restart: always
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=root
    #   - MONGO_INITDB_ROOT_PASSWORD=example
    #   #Create a new database. Please note, the
    #   #/docker-entrypoint-initdb.d/init.js has to be executed
    #   #in order for the database to be created
    #   - MONGO_INITDB_DATABASE=PortfolioDoctor
    volumes:
      # Add the db-init.js file to the Mongo DB container
      #- ./db-init.js:/docker-entrypoint-initdb.d/init.js:ro
      # - ./backend/models/user.js:/docker-entrypoint-initdb.d/init.js:ro
      - ./dataDB:/data/db
    
    ports:
      - '27017:27017'
    
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD=example
  #     ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/PortfolioDoctor?authSource=admin
  #     ME_CONFIG_MONGODB_SERVER=mongodb
  #   depends_on:
  #     - mongodb 
  

  server:
    build:
      context: ./backend

    container_name: backend-node
    # environment:
    #   - MONGO_USERNAME=root
    #   - MONGO_PASSWORD=example
    #   - MONGO_HOSTNAME=mongodb
    #   - MONGO_PORT=27017
    #   - MONGO_DB=PortfolioDoctor
    #  # MONGODB_URI: mongodb://root:example@mongodb/PortfolioDoctor
    ports:
      - '3000:3000'
    depends_on:
      - mongodb

  client:
    build:
      context: ./portfolio-doctor
    container_name: frontend-angular
    ports:
      - '4200:4200'
    depends_on:
      - mongodb
  nginx:

    container_name: nginx

    depends_on:

      - server

      - client

    ports:

      - "80:80"

    build:

      context: ./nginx
